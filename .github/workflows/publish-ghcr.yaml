name: Docker Image CI for GHCR

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build_and_publish:
    name: Build and Publish Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to GHCR
        run: echo "${{ secrets.GH_PAT }}" | docker login ghcr.io -u Amgad226 --password-stdin
        shell: bash

      - name: Build and Push Docker Image
        run: |
          set -e
          docker build . -t ghcr.io/amgad226/source-safe:latest
          docker push ghcr.io/amgad226/source-safe:latest
        shell: bash
      - name: Notify Completion
        if: success()
        run: echo "Deployment completed successfully."
        shell: bash

      - name: Handle Failure
        if: failure()
        run: echo "Deployment failed. Check logs for details."
        shell: bash

  run_pull:
    needs: build_and_publish
    name: Pull and Deploy on Server
    runs-on: ubuntu-latest
    steps:
      - name: Set Up SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
        shell: bash

      - name: Pull Latest Changes and Deploy
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << EOF
          set -e
          cd ${{ secrets.WORK_DIR }}
          docker compose pull
          docker compose up -d
          docker image prune --filter "dangling=true"  -f
          EOF
        shell: bash
        
      - name: Cleanup SSH Key
        run: |
          rm -rf ~/.ssh
        shell: bash

      - name: Notify Completion
        if: success()
        run: echo "pull completed successfully."
        shell: bash

      - name: Handle Failure
        if: failure()
        run: echo "pull failed. Check logs for details."
        shell: bash
